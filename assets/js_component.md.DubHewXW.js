import{_ as e,c as n,o as t,a4 as a}from"./chunks/framework.JknIMk6Q.js";const u=JSON.parse('{"title":"扩展组件库","description":"","frontmatter":{},"headers":[],"relativePath":"js/component.md","filePath":"js/component.md"}'),o={name:"js/component.md"},l=a('<h1 id="扩展组件库" tabindex="-1">扩展组件库 <a class="header-anchor" href="#扩展组件库" aria-label="Permalink to &quot;扩展组件库&quot;">​</a></h1><p><a href="https://blog.csdn.net/qq278672818/article/details/134767652" target="_blank" rel="noreferrer">如何二次封装一个Vue3组件库？</a></p><h2 id="封装组件库" tabindex="-1">封装组件库 <a class="header-anchor" href="#封装组件库" aria-label="Permalink to &quot;封装组件库&quot;">​</a></h2><p>开发npm包与开发前端页面工程不同，对于依赖有着更精细的控制：</p><ul><li>开发前端页面工程 <ul><li>安装到dependencies和devDependencies无区别。因为工程都要经过构建成dist成果物，本身是不需要依赖安装的。因此前端需要安装依赖的只有开发模式。</li></ul></li><li>开发npm包： <ul><li>开发模式，生产模式有区别，依赖还区分作为自身依赖还是宿主依赖。</li></ul></li></ul><p><code>dependencies</code>生产依赖 这类依赖在开发环境，生产环境都会被安装。在npm包被集成到宿主工程时，会作为npm包本身的依赖被安装。</p><p><code>devDependencies</code>开发依赖 只在开发环境被安装的依赖，生产环境不安装。在npm包被集成到宿主工程时，也不会被安装。</p><p><code>peerDependencies</code>对等依赖 我觉得也可以叫做“宿主依赖”。这类依赖在开发环境会被安装，但生产构建时不会打包进成果物中。在npm包被集成到宿主工程时，也不会被安装（npm部分版本会自动安装）。但是会提示要求宿主工程本身安装这个依赖。</p><p>封装组件库</p><ol><li>需要构建流程</li><li>不需要构建流程</li></ol>',10),i=[l];function p(c,r,d,s,_,m){return t(),n("div",null,i)}const f=e(o,[["render",p]]);export{u as __pageData,f as default};
