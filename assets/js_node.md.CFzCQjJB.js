import{_ as i,c as s,o as a,a4 as l}from"./chunks/framework.JknIMk6Q.js";const u=JSON.parse('{"title":"node","description":"","frontmatter":{},"headers":[],"relativePath":"js/node.md","filePath":"js/node.md"}'),n={name:"js/node.md"},e=l(`<h1 id="node" tabindex="-1">node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;node&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p><a href="https://nodejs.org/en/download/package-manager" target="_blank" rel="noreferrer">官网安装的几种方式</a></p><ul><li>如果是通过安装程序进行的，卸载</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/lib/node_modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/node</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;../lib/node_modules/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $9}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xargs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {}</span></span></code></pre></div><ul><li>通过 node version Package Manager安装 (好像需要先安装 git)</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># installs nvm (Node Version Manager)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># download and install Node.js (you may need to restart the terminal)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># verifies the right Node.js version is in the environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # should print \`v20.14.0\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># verifies the right NPM version is in the environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # should print \`10.7.0\`</span></span></code></pre></div><h2 id="" tabindex="-1">.. <a class="header-anchor" href="#" aria-label="Permalink to &quot;..&quot;">​</a></h2><ol><li><p>npm init -y</p><ul><li>生成 package.json</li></ul></li><li><p>npm i express mongoose</p></li><li><p>node app.js</p></li><li><p>卸载</p><ul><li>官网下载 pkg 包安装的 <ul><li>sudo rm -rf /usr/local/{bin/{node,npm},lib/node<em>modules/npm,lib/node,share/man/</em>/node._}</li></ul></li></ul></li><li><p>npm i nodemon -g</p><ul><li>工具 它在检测到目录中的文件更改时自动重新启动节点应用程序。</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;nodemon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nodemon app.js&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //这样在命令行直接敲nodemon 就可以了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;module&quot;">​</a></h2><ol><li><p>koa</p></li><li><p>koa-router</p></li><li><p>mongodb</p></li><li><p>mogoose</p></li><li><p>koa-generator</p></li><li><p>fs.readFile() 读取的文件用 data.toString()可以将存储在文件里的二进制或者 16 进制 <code>转换</code> 为能认识的字符</p></li></ol><h2 id="tips" tabindex="-1">tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;tips&quot;">​</a></h2><ol><li>require</li><li>如果有路径，就去路径里面找</li><li>没有的话就去 node_modules 里面找</li><li>再去 node 的安装目录里找</li></ol><ul><li>跨域 同协议/同域名/同端口</li></ul><h2 id="mongodb-使用brew安装mongodb" tabindex="-1">mongoDB <a href="https://www.runoob.com/mongodb/mongodb-osx-install.html" target="_blank" rel="noreferrer">使用brew安装mongodb</a> <a class="header-anchor" href="#mongodb-使用brew安装mongodb" aria-label="Permalink to &quot;mongoDB [使用brew安装mongodb](https://www.runoob.com/mongodb/mongodb-osx-install.html)&quot;">​</a></h2><ol><li>brew tap mongodb/brew <ul><li>一直失败的话可以再重启一下电脑</li><li>mongodb在brew的核心仓库已经下架了,我们就需要用tap命令关联第三方的仓库(<a href="https://github.com/mongodb/homebrew-brew" target="_blank" rel="noreferrer">https://github.com/mongodb/homebrew-brew</a>)</li></ul></li><li>brew install mongodb-community <ul><li>安装最新社区版</li></ul></li><li>brew services start mongodb-community <ul><li>开始服务</li></ul></li><li>brew services stop mongodb-community <ul><li>关闭服务</li></ul></li><li>brew services restart mongodb-community <ul><li>重启服务</li></ul></li></ol><hr><ol><li>mongo 可以进入进行数据库的一些操作</li><li>exit 推出mango服务器</li><li>1</li><li>1</li><li>1</li><li>1</li><li>1</li><li>1</li><li>1</li><li>1</li><li>1</li></ol><h2 id="webpack-4-个核心概念" tabindex="-1"><a href="https://www.jianshu.com/p/b3c7cf338f41" target="_blank" rel="noreferrer">webpack-4 个核心概念</a> <a class="header-anchor" href="#webpack-4-个核心概念" aria-label="Permalink to &quot;[webpack-4 个核心概念](https://www.jianshu.com/p/b3c7cf338f41)&quot;">​</a></h2><ol><li>entry：入口</li><li>output：出口</li><li>loaders：加载器</li><li>plugins：插件</li></ol><h2 id="获取当前终端所在目录" tabindex="-1">获取当前终端所在目录 <a class="header-anchor" href="#获取当前终端所在目录" aria-label="Permalink to &quot;获取当前终端所在目录&quot;">​</a></h2><p>// 这个函数用于获取我们当前终端的所在目录，假想一下，我们在启动一个 React 项目的时候，我们是不是需要在项目的根目录下来启动，通过这个函数来获取当前路径，那么就可以通过这个路径来做我们想做的事情啦。 import fs from &quot;node:fs&quot;; import path from &quot;node:path&quot;;</p><p>const appDirectory = fs.realpathSync(process.cwd());</p><p>function resolveApp(relativePath) { return path.resolve(appDirectory, relativePath); }</p><p>console.log(appDirectory) export { resolveApp };</p>`,25),t=[e];function h(p,o,r,k,d,g){return a(),s("div",null,t)}const m=i(n,[["render",h]]);export{u as __pageData,m as default};
