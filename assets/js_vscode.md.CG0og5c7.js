import{_ as s,c as e,o as a,a4 as i}from"./chunks/framework.JknIMk6Q.js";const g=JSON.parse('{"title":"vscode","description":"","frontmatter":{},"headers":[],"relativePath":"js/vscode.md","filePath":"js/vscode.md"}'),t={name:"js/vscode.md"},n=i(`<h1 id="vscode" tabindex="-1"><a href="https://code.visualstudio.com/docs/languages/jsconfig" target="_blank" rel="noreferrer">vscode</a> <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;[vscode](https://code.visualstudio.com/docs/languages/jsconfig)&quot;">​</a></h1><ul><li><a href="https://code.visualstudio.com/updates/v1_66" target="_blank" rel="noreferrer">VSCode-历史版本</a></li></ul><h2 id="vscode文件夹" tabindex="-1"><a href="https://zhuanlan.zhihu.com/p/642777341?utm_id=0" target="_blank" rel="noreferrer">.vscode文件夹</a> <a class="header-anchor" href="#vscode文件夹" aria-label="Permalink to &quot;[.vscode文件夹](https://zhuanlan.zhihu.com/p/642777341?utm_id=0)&quot;">​</a></h2><p>extensions.json setting.json launch.json task.json</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>├─ .vscode </span></span>
<span class="line"><span>│  ├─ extensions.json </span></span>
<span class="line"><span>│  ├─ setting.json</span></span>
<span class="line"><span>│  ├─ launch.json</span></span>
<span class="line"><span>│  ├─ task.json</span></span>
<span class="line"><span>├─ jsconfig.json</span></span>
<span class="line"><span>├─ tsconfig.json</span></span></code></pre></div><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><ul><li><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/markdown-basics?id=%e8%a1%8c%e5%86%85%e4%bb%a3%e7%a0%81" target="_blank" rel="noreferrer">markdown Preview预览插件</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/wNA2NmpfVmVCqYB4Mdo0Tw" target="_blank" rel="noreferrer">流程图插件</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/vpsBGC2eLpKemyTtKuf6pw" target="_blank" rel="noreferrer">插件</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/5L7j2Bj9CMmmtCrHQm0kNA" target="_blank" rel="noreferrer">插件</a></p></li></ul><h2 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h2><ul><li><code>cmd+r</code> 终端运行最新使用的命令</li><li></li></ul><h2 id="eslint" tabindex="-1"><a href="https://zh-hans.eslint.org/docs/latest/use/configure/configuration-files-new" target="_blank" rel="noreferrer">Eslint</a> <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;[Eslint](https://zh-hans.eslint.org/docs/latest/use/configure/configuration-files-new)&quot;">​</a></h2><h3 id="配置迁移指南" tabindex="-1"><a href="https://zh-hans.eslint.org/docs/latest/use/configure/migration-guide" target="_blank" rel="noreferrer">配置迁移指南</a> <a class="header-anchor" href="#配置迁移指南" aria-label="Permalink to &quot;[配置迁移指南](https://zh-hans.eslint.org/docs/latest/use/configure/migration-guide)&quot;">​</a></h3><p>这份指南概述了如何将 ESLint 配置文件从 eslintrc 格式（通常配置在 .eslintrc.js 或 .eslintrc.json 文件中）迁移到新的平面配置格式（通常配置在 eslint.config.js 文件中）。</p><ul><li><p>从 ESLint v9.0.0 开始，平面配置文件格式将成为默认的配置文件格式。一旦发布了 ESLint v9.0.0，你可以在没有任何额外配置的情况下开始使用平面配置文件格式。</p><ul><li><code>eslint@^9.0.0</code>使用<code>eslint.config.[js|cjs|yaml|yml|json]</code>新的配置文件系统,需要在项目根目录放置 <ul><li>且vscode插件需要配置<code>&quot;eslint.experimental.useFlatConfig&quot;: true,</code>来启动该扁平配置系统</li></ul></li></ul></li><li><p>要在 ESLint v8 中使用平面配置，请在项目根目录中放置一个 eslint.config.js 文件或将 ESLINT_USE_FLAT_CONFIG 环境变量设置为 true。</p><ul><li><code>eslint@8.0.0</code> eslint默认使用 <code>eslintrc.[js|cjs|yaml|yml|json]</code> (旧的配置系统)</li></ul></li></ul><h2 id="prettier" tabindex="-1">Prettier <a class="header-anchor" href="#prettier" aria-label="Permalink to &quot;Prettier&quot;">​</a></h2><h2 id="vitur" tabindex="-1">Vitur <a class="header-anchor" href="#vitur" aria-label="Permalink to &quot;Vitur&quot;">​</a></h2><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><h3 id="vetur插件在vue3中报错" tabindex="-1"><a href="https://www.jianshu.com/p/7348de8190f1" target="_blank" rel="noreferrer">vetur插件在vue3中报错</a> <a id="2303291024"></a> <a class="header-anchor" href="#vetur插件在vue3中报错" aria-label="Permalink to &quot;[vetur插件在vue3中报错](https://www.jianshu.com/p/7348de8190f1) &lt;a id=&quot;2303291024&quot; /&gt;&quot;">​</a></h3><p>vue2支持的插件<code>vetur</code> vue3支持的插件 <s><code>volar(vue language features)作者已不维护</code></s> <code>Vue-Official</code></p><ul><li>如果不想禁用vetur，又想启用volar，可以在当前项目中的.vscode文件夹的settings.json文件中配置禁用如下：</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// setting.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;vetur.validation.template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;vetur.validation.script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;vetur.validation.style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="有个场景-两个vue项目里使用了eslint" tabindex="-1">有个场景 两个vue项目里使用了eslint， <a class="header-anchor" href="#有个场景-两个vue项目里使用了eslint" aria-label="Permalink to &quot;有个场景 两个vue项目里使用了eslint，&quot;">​</a></h3><p><code>一个eslin@^6（使用老的配置方案eslintrc.js）</code><code>一个eslint@^8（开启了新特性-faltConifg-在v9.0.0.0是默认开启的）</code></p><ul><li><p>这里有个问题eslint@8里开启新特性需要在vscode里设置环境变量<code>&quot;eslint.experimental.useFlatConfig&quot;: true,</code>(需安装vscode.eslint插件)才能开启该特性，</p><ul><li>但是我 <em>开启</em> 该设置之后：在使用了eslint@6老配置方案的项目就无法使用eslint提示，</li><li>但是我 <em>关闭</em> 该设置之后：在使用了eslint@8新配置方案的项目就无法使用eslint提示，</li></ul></li><li><p>那这个时候就可以引入<code>.vscode/settings.json</code>了，</p><ul><li><p>可以将全局用户配置 <code>user.settings</code>里 <em>关闭</em> <code>&quot;eslint.experimental.useFlatConfig&quot;: false,</code>该特性</p></li><li><p>在使用<code>@eslint@^8</code>且开启<code>flatConfig</code>功能的项目根目录里创建 <code>.vscode/settings.json</code> 来开启eslint插件的这个特性</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;eslint.experimental.useFlatConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li></ul></li></ul><h3 id="项目里导入的依赖路径带别名无法跳转问题" tabindex="-1">项目里导入的依赖路径带别名无法跳转问题 <a id="2303291451"></a> <a class="header-anchor" href="#项目里导入的依赖路径带别名无法跳转问题" aria-label="Permalink to &quot;项目里导入的依赖路径带别名无法跳转问题 &lt;a id=&quot;2303291451&quot; /&gt;&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// jsconfig.json | tsconfig.json  这个给vscode编译提供上下文配置的（智能感知 IntelliSense）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>像<code>.css | .vue</code>这种还是无法跳转的 可以借助<code>别名路径跳转</code>插件来尝试解决</p><h3 id="快捷键-1" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键-1" aria-label="Permalink to &quot;快捷键&quot;">​</a></h3><ul><li>折叠一级 <code>ctrl + K + 0</code> <code>ctrl + K + L</code></li><li>折叠二级 <code>ctrl + K + 2</code></li><li>展开所有 <code>ctrl + K + J</code></li><li>打开集成终端 <code>ctrl + j</code></li></ul>`,28),l=[n];function o(r,h,p,c,d,u){return a(),e("div",null,l)}const E=s(t,[["render",o]]);export{g as __pageData,E as default};
